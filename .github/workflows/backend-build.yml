name: Build backend

on:
  pull_request:
    paths:
      - backend/**

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend/

    env:  # Set environment variables for the entire job
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}


    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: 'pnpm'
          cache-dependency-path: backend/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install

      - name: Generate prisma client
        run: pnpm prisma:generate
      
      - name: Build
        run: pnpm build

      - name: Check if PostgreSQL is running
        run: |
          apt-get update
          apt-get install -y postgresql-client
          pg_isready -h localhost -p 5432 -U $POSTGRES_USER

      - name: Run End-to-End Tests
        run: pnpm test:e2e
        working-directory: backend/test